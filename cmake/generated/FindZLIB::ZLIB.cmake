# AUTOGENERATED, DON'T CHANGE THIS FILE!


if (NOT USERVER_CHECK_PACKAGE_VERSIONS)
  unset(ZLIB::ZLIB_FIND_VERSION)
endif()

if (TARGET ZLIB::ZLIB)
  if (NOT ZLIB::ZLIB_FIND_VERSION)
      set(ZLIB::ZLIB_FOUND ON)
      return()
  endif()

  if (ZLIB::ZLIB_VERSION)
      if (ZLIB::ZLIB_FIND_VERSION VERSION_LESS_EQUAL ZLIB::ZLIB_VERSION)
          set(ZLIB::ZLIB_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${ZLIB::ZLIB_VERSION} "
              "of ZLIB::ZLIB when version ${ZLIB::ZLIB_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `ZLIB::ZLIB` package.\n\tDebian: sudo apt update && sudo apt install zlib1g-dev\n\tMacOS: brew install zlib\n\tFedora: sudo dnf install zlib-devel")


include(FindPackageHandleStandardArgs)

find_library(ZLIB::ZLIB_LIBRARIES_z_zlib_zdll_zlib1
  NAMES z zlib zdll zlib1
)
list(APPEND ZLIB::ZLIB_LIBRARIES ${ZLIB::ZLIB_LIBRARIES_z_zlib_zdll_zlib1})

find_path(ZLIB::ZLIB_INCLUDE_DIRS_zlib_h
  NAMES zlib.h
)
list(APPEND ZLIB::ZLIB_INCLUDE_DIRS ${ZLIB::ZLIB_INCLUDE_DIRS_zlib_h})



if (ZLIB::ZLIB_VERSION)
  set(ZLIB::ZLIB_VERSION ${ZLIB::ZLIB_VERSION})
endif()

if (ZLIB::ZLIB_FIND_VERSION AND NOT ZLIB::ZLIB_VERSION)
  include(DetectVersion)

  if (UNIX AND NOT APPLE)
    deb_version(ZLIB::ZLIB_VERSION zlib1g-dev)
    rpm_version(ZLIB::ZLIB_VERSION zlib-devel)
  endif()
  if (APPLE)
    brew_version(ZLIB::ZLIB_VERSION zlib)
  endif()
endif()

 
find_package_handle_standard_args(
  ZLIB::ZLIB
    REQUIRED_VARS
      ZLIB::ZLIB_LIBRARIES
      ZLIB::ZLIB_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  ZLIB::ZLIB_LIBRARIES
  ZLIB::ZLIB_INCLUDE_DIRS
  
)

if (NOT ZLIB::ZLIB_FOUND)
  if (ZLIB::ZLIB_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${ZLIB::ZLIB_FIND_VERSION}")
  endif()

  return()
endif()

if (ZLIB::ZLIB_FIND_VERSION)
  if (ZLIB::ZLIB_VERSION VERSION_LESS ZLIB::ZLIB_FIND_VERSION)
      message(STATUS
          "Version of ZLIB::ZLIB is '${ZLIB::ZLIB_VERSION}'. "
          "Required version is at least '${ZLIB::ZLIB_FIND_VERSION}'. "
          "Ignoring found ZLIB::ZLIB."
          "Note: Set -DUSERVER_CHECK_PACKAGE_VERSIONS=0 to skip package version checks if the package is fine."
      )
      set(ZLIB::ZLIB_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET ZLIB::ZLIB)
  add_library(ZLIB::ZLIB INTERFACE IMPORTED GLOBAL)

  target_include_directories(ZLIB::ZLIB INTERFACE ${ZLIB::ZLIB_INCLUDE_DIRS})
  target_link_libraries(ZLIB::ZLIB INTERFACE ${ZLIB::ZLIB_LIBRARIES})
  
  # Target ZLIB::ZLIB is created
endif()

if (ZLIB::ZLIB_VERSION)
  set(ZLIB::ZLIB_VERSION "${ZLIB::ZLIB_VERSION}" CACHE STRING "Version of the ZLIB::ZLIB")
endif()
