# AUTOGENERATED, DON'T CHANGE THIS FILE!

include(ExternalProject)

 
if(NOT TARGET spdlog_external_project)
  if (CMAKE_BUILD_TYPE MATCHES "Test")
    set(CURRENT_CMAKE_BUILD_TYPE "Debug")
  else ()
    set(CURRENT_CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE})
  endif ()


  ExternalProject_Add(
    spdlog_external_project
    SOURCE_DIR ${USERVER_ROOT_DIR}/submodules/spdlog
    DOWNLOAD_COMMAND ""
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}
    CMAKE_ARGS
      -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}
      -DCMAKE_C_COMPILER_LAUNCHER=${CMAKE_C_COMPILER_LAUNCHER}
      -DCMAKE_CXX_COMPILER_LAUNCHER=${CMAKE_CXX_COMPILER_LAUNCHER}
      -DCMAKE_BUILD_TYPE=${CURRENT_CMAKE_BUILD_TYPE}
      -DSPDLOG_BUILD_EXAMPLES=OFF
      -DSPDLOG_BUILD_TESTING=OFF
      -DSPDLOG_BUILD_BENCH=OFF
    PATCH_COMMAND "pwd"
    INSTALL_COMMAND ""
    UPDATE_COMMAND ""
    LOG_DOWNLOAD True
    LOG_CONFIGURE True
    LOG_BUILD True
  )

ExternalProject_Get_Property(spdlog_external_project source_dir binary_dir)

set(spdlog_INCLUDE_DIRS ${source_dir}/include)
 
file(MAKE_DIRECTORY ${spdlog_INCLUDE_DIRS})

add_library(spdlog INTERFACE IMPORTED GLOBAL)
add_dependencies(spdlog
  spdlog_external_project
 )
target_compile_definitions(
  spdlog
    INTERFACE
      SPDLOG_FMT_EXTERNAL=1
      SPDLOG_PREVENT_CHILD_FD=1
 )
 
 
target_include_directories(
  spdlog
    INTERFACE
      ${spdlog_INCLUDE_DIRS}
)

  
set(spdlog_FOUND ON)
set(Externalspdlog_FOUND ON)
set(spdlog_external_project_FOUND ON)

endif(NOT TARGET spdlog_external_project)
