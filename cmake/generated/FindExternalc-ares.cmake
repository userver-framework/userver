# AUTOGENERATED, DON'T CHANGE THIS FILE!

include(ExternalProject)

 
if(NOT TARGET c-ares_external_project)
  if (CMAKE_BUILD_TYPE MATCHES "Test")
    set(CURRENT_CMAKE_BUILD_TYPE "Debug")
  else ()
    set(CURRENT_CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE})
  endif ()

  message(STATUS "c-ares will be downloaded at build stage if required")

  ExternalProject_Add(
    c-ares_external_project
    GIT_REPOSITORY https://github.com/c-ares/c-ares.git
    GIT_TAG cares-1_18_1
    TIMEOUT 10
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}
    CMAKE_ARGS
      -DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}
      -DCMAKE_C_COMPILER_LAUNCHER=${CMAKE_C_COMPILER_LAUNCHER}
      -DCMAKE_CXX_COMPILER_LAUNCHER=${CMAKE_CXX_COMPILER_LAUNCHER}
      -DCMAKE_BUILD_TYPE=${CURRENT_CMAKE_BUILD_TYPE}
      -DCARES_INSTALL=OFF
      -DCARES_BUILD_TOOLS=OFF
      -DCARES_SHARED=OFF
      -DCARES_STATIC=ON
    PATCH_COMMAND ""
    INSTALL_COMMAND mv ares_build.h ../c-ares_external_project/include/ares_build.h
    UPDATE_COMMAND ""
    LOG_DOWNLOAD True
    LOG_CONFIGURE True
    LOG_BUILD True
  )

ExternalProject_Get_Property(c-ares_external_project source_dir binary_dir)

set(c-ares_INCLUDE_DIRS ${source_dir}/include)
 
file(MAKE_DIRECTORY ${c-ares_INCLUDE_DIRS})

add_library(c-ares INTERFACE IMPORTED GLOBAL)
add_dependencies(c-ares
  c-ares_external_project
 )
 
target_link_libraries(
  c-ares
    INTERFACE
      "${binary_dir}/lib/libcares.a"
 )
 
target_include_directories(
  c-ares
    INTERFACE
      ${c-ares_INCLUDE_DIRS}
)

  
set(c-ares_FOUND ON)
set(c-ares_external_project_FOUND ON)

endif(NOT TARGET c-ares_external_project)
