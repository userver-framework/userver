@PACKAGE_INIT@

find_package(PkgConfig REQUIRED)

find_package(Threads REQUIRED)
find_package(Boost COMPONENTS filesystem program_options iostreams regex locale coroutine REQUIRED)
find_package(CURL REQUIRED)
find_package(OpenSSL REQUIRED)
find_package(Iconv REQUIRED)
find_package(ZLIB REQUIRED)

find_package(yaml-cpp REQUIRED)
add_library(libyamlcpp INTERFACE)
target_link_libraries(libyamlcpp INTERFACE ${YAML_CPP_LIBRARIES})

pkg_check_modules (JEMALLOC jemalloc)
pkg_search_module(JEMALLOC REQUIRED jemalloc)
add_library(Jemalloc INTERFACE)
target_link_libraries(Jemalloc INTERFACE ${JEMALLOC_LIBRARIES})

pkg_check_modules (LIBCARES libcares)
pkg_search_module(LIBCARES REQUIRED libcares)
add_library(c-ares INTERFACE)
target_link_libraries(c-ares INTERFACE ${LIBCARES_LIBRARIES})

pkg_check_modules (LIBCRYPTOPP cryptopp)
pkg_search_module(LIBCRYPTOPP REQUIRED cryptopp)
add_library(CryptoPP INTERFACE)
target_link_libraries(CryptoPP INTERFACE ${LIBCRYPTOPP_LIBRARIES})

pkg_check_modules (LIBEV libevent)
pkg_search_module(LIBEV REQUIRED libevent)
add_library(LibEv INTERFACE)
target_link_libraries(LibEv INTERFACE ${LIBEV_LIBRARIES})

add_library(Http_Parser INTERFACE)
target_link_libraries(Http_Parser INTERFACE http_parser)

set(CMAKE_CONFIG_TARGETS_FILE @CMAKE_CONFIG_TARGETS_FILE@)
include("${CMAKE_CURRENT_LIST_DIR}/${CMAKE_CONFIG_TARGETS_FILE}")

check_required_components(userver)
