name: Docker build

'on':
    pull_request:
    push:
        branches:
          - master
          - develop
          - feature/**

jobs:
    tests:
        strategy:
            fail-fast: false
            matrix:
                include:
                  - cmake-flags: >-
                        -DCMAKE_CXX_COMPILER=clang++-16 -DCMAKE_C_COMPILER=clang-16
                        -DUSERVER_FEATURE_MYSQL=0
                        -DUSERVER_FEATURE_MONGODB=0
                        -DUSERVER_FEATURE_POSTGRESQL=0
                        -DUSERVER_FEATURE_REDIS=0
                        -DUSERVER_FEATURE_CLICKHOUSE=0
                        -DUSERVER_FEATURE_GRPC=0
                        -DUSERVER_FEATURE_RABBITMQ=0
                        -DCMAKE_CXX_STANDARD=17
                    image: userver-ubuntu-core
                    info: ubuntu + clang + cxx17 + core
                    id: ubuntu_clang_cxx17_core
                  - cmake-flags: >-
                        -DCMAKE_CXX_COMPILER=clang++-16 -DCMAKE_C_COMPILER=clang-16
                        -DUSERVER_FEATURE_MYSQL=1
                        -DCMAKE_CXX_STANDARD=17
                    image: userver-ubuntu
                    info: ubuntu + clang + cxx17
                    id: ubuntu_clang_cxx17
                  - cmake-flags: >-
                        -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_C_COMPILER=gcc-11
                        -DUSERVER_FEATURE_MYSQL=1
                        -DCMAKE_CXX_STANDARD=17
                    image: userver-ubuntu
                    info: ubuntu + gcc + cxx17
                    id: ubuntu_gcc_cxx17
                  - cmake-flags: >-
                        -DCMAKE_CXX_COMPILER=clang++-16 -DCMAKE_C_COMPILER=clang-16
                        -DUSERVER_FEATURE_MYSQL=1
                        -DCMAKE_CXX_STANDARD=20
                    image: userver-ubuntu
                    info: ubuntu + clang + cxx20
                    id: ubuntu_clang_cxx20
                  - cmake-flags: >-
                        -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_C_COMPILER=gcc-11
                        -DUSERVER_FEATURE_MYSQL=1
                        -DCMAKE_CXX_STANDARD=20
                    image: userver-ubuntu
                    info: ubuntu + gcc + cxx20
                    id: ubuntu_gcc_cxx20

        runs-on: ubuntu-latest
        name: '${{ matrix.info }}'
        steps:
          - uses: actions/checkout@v2

          - name: Reuse ccache directory
            uses: actions/cache@v2
            with:
                path: .ccache
                key: 'ccache-dir-${{ matrix.id }}_${{github.ref}}_run-${{github.run_number}}'
                restore-keys: |
                    ccache-dir-${{ matrix.id }}_${{github.ref}}_run-
                    ccache-dir-${{ matrix.id }}_
                    ccache-

          - name: Setup ccache
            run: |
                chmod 666 . 
                docker-compose run --rm ${{ matrix.image }} bash -c 'ccache -M 2.0GB
                    && ccache -s'

          - name: Cmake
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'cmake -DUSERVER_GOOGLE_COMMON_PROTOS=/app/api-common-protos
                ${{ matrix.cmake-flags }} -B./build -S./'

          - name: Build
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'cd /userver/build
                && make -j $(nproc)'

          - name: Run tests
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'cd /userver/build
                && ulimit -n 4096 && ctest -V'
