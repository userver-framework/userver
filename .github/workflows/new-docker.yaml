name: New docker build
 
'on':
    pull_request:
    push:
        branches:
          - master
          - develop
          - feature/**
 
jobs:
    tests:
        strategy:
            fail-fast: false
            matrix:
                include:
                  - cmake-flags: >-
                      -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
                      -DCMAKE_CXX_STANDARD=17
                    image: userver-ubuntu
                    info: ubuntu + clang 17
                    id: ubuntu_clang_17
                  - cmake-flags: >-
                      -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc
                      -DCMAKE_CXX_STANDARD=17
                    image: userver-ubuntu
                    info: ubuntu + gcc 17
                    id: ubuntu_gcc_17
                  - cmake-flags: >-
                      -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang
                      -DCMAKE_CXX_STANDARD=20
                    image: userver-ubuntu
                    info: ubuntu + clang 20
                    id: ubuntu_clang_20
                  - cmake-flags: >-
                      -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc
                      -DCMAKE_CXX_STANDARD=20
                    image: userver-ubuntu
                    info: ubuntu + gcc 20
                    id: ubuntu_gcc_20

        runs-on: ubuntu-latest
        name: '${{ matrix.info }}'
        steps:
          - uses: actions/checkout@v2
 
          - name: Reuse ccache directory
            uses: actions/cache@v2
            with:
                path: .ccache
                key: 'ccache-dir-${{ matrix.id }}_${{github.ref}}_run-${{github.run_number}}'
                restore-keys: |
                    ccache-dir-${{ matrix.id }}_${{github.ref}}_run-
                    ccache-dir-${{ matrix.id }}_
                    ccache-
 
          - name: Setup ccache
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'ccache -M 2.0GB
                && ccache -s'
 
          - name: Cmake
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'cmake -DUSERVER_GOOGLE_COMMON_PROTOS=/app/api-common-protos ${{ matrix.cmake-flags }}
                -B./build -S./'
 
          - name: Build
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'cd /userver/build
                && make -j $(nproc)'
 
          - name: Run tests
            run: docker-compose run --rm ${{ matrix.image }} bash -c 'cd /userver/build
                && ulimit -n 4096 && ctest -V'
